# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-09-15 23:09
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CostItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Descrizione')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Costo')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(verbose_name='Note')),
                ('cfu', models.IntegerField(verbose_name='CFU')),
                ('invoice_to_partner_from', models.BooleanField(verbose_name="Fattura all'ente di provenienza")),
                ('proforma_sent_on', models.DateTimeField(verbose_name='Data invio proforma')),
                ('staying_confirm_sent_on', models.DateTimeField(verbose_name='Data invio conferma alloggio')),
            ],
        ),
        migrations.CreateModel(
            name='CourseLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Nome')),
                ('description', models.TextField(verbose_name='Descrizione')),
            ],
        ),
        migrations.CreateModel(
            name='Lodge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=512, verbose_name='Indirizzo')),
                ('zip_code', models.CharField(max_length=5, verbose_name='CAP')),
                ('country', django_countries.fields.CountryField(max_length=2, verbose_name='Nazione')),
                ('phone_number', models.CharField(blank=True, max_length=32, validators=[django.core.validators.RegexValidator(message="Inserire il numero nel formato: '+999999999'.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Telefono')),
                ('fax', models.CharField(blank=True, max_length=32, validators=[django.core.validators.RegexValidator(message="Inserire il numero nel formato: '+999999999'.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Fax')),
                ('website', models.URLField(verbose_name='Sito web')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('link_to_map', models.URLField(verbose_name='Google Maps')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=512, verbose_name='Indirizzo')),
                ('zip_code', models.CharField(max_length=5, verbose_name='CAP')),
                ('country', django_countries.fields.CountryField(max_length=2, verbose_name='Nazione')),
                ('phone_number', models.CharField(blank=True, max_length=32, validators=[django.core.validators.RegexValidator(message="Inserire il numero nel formato: '+999999999'.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Telefono')),
                ('fax', models.CharField(blank=True, max_length=32, validators=[django.core.validators.RegexValidator(message="Inserire il numero nel formato: '+999999999'.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Fax')),
                ('website', models.URLField(verbose_name='Sito web')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('name', models.CharField(max_length=256, verbose_name='Nome')),
                ('vat', models.CharField(max_length=16, verbose_name='P.IVA')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=512, verbose_name='Indirizzo')),
                ('zip_code', models.CharField(max_length=5, verbose_name='CAP')),
                ('country', django_countries.fields.CountryField(max_length=2, verbose_name='Nazione')),
                ('phone_number', models.CharField(blank=True, max_length=32, validators=[django.core.validators.RegexValidator(message="Inserire il numero nel formato: '+999999999'.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Telefono')),
                ('fax', models.CharField(blank=True, max_length=32, validators=[django.core.validators.RegexValidator(message="Inserire il numero nel formato: '+999999999'.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Fax')),
                ('website', models.URLField(verbose_name='Sito web')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('name', models.CharField(max_length=128, verbose_name='Nome')),
                ('last_name', models.CharField(max_length=128, verbose_name='Cognome')),
                ('birth_date', models.DateField(verbose_name='Data di Nascita')),
                ('birth_place', models.CharField(max_length=128)),
                ('sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1, verbose_name='Sesso')),
                ('skype_id', models.CharField(max_length=64, verbose_name='Skype Id')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Nome')),
                ('type', models.CharField(choices=[('intensivo', 'Intensivo'), ('semintensivo', 'Semintensivo'), ('ordinario', 'Ordinario'), ('individuale', 'Individuale')], max_length=16, verbose_name='Tipo')),
                ('start', models.DateField(verbose_name='Data inizio')),
                ('end', models.DateField(verbose_name='Data fine')),
                ('duration', models.IntegerField(verbose_name='Durata in ore')),
                ('description', models.TextField(verbose_name='Descrizione')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.Course', verbose_name='Corso')),
                ('level_in', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='level_in', to='school.CourseLevel', verbose_name='Livello entrata')),
                ('level_out', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='level_out', to='school.CourseLevel', verbose_name='Livello uscita')),
            ],
        ),
        migrations.CreateModel(
            name='Staying',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_from', models.DateField(verbose_name='Dal')),
                ('date_to', models.DateField(verbose_name='Al')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.Course', verbose_name='Corso')),
                ('lodge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.Lodge', verbose_name='Alloggio')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='school.Person')),
                ('notes', models.TextField(verbose_name='Note')),
                ('academic', models.BooleanField(verbose_name='Accademico')),
                ('passport_number', models.CharField(max_length=16, verbose_name='Passaporto n.')),
            ],
            options={
                'abstract': False,
            },
            bases=('school.person',),
        ),
        migrations.AddField(
            model_name='partner',
            name='main_contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.Person', verbose_name='Contatto principale'),
        ),
        migrations.AddField(
            model_name='lodge',
            name='landlord',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.Person', verbose_name='Proprietario'),
        ),
        migrations.AddField(
            model_name='student',
            name='partner_from',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.Partner', verbose_name='Ente di provenienza'),
        ),
        migrations.AddField(
            model_name='course',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.Student', verbose_name='Studente'),
        ),
    ]
